//'use strict';

var through = require('through');

module.exports = brainf_ckify;

///

function brainf_ckify(file) {
	// brainf*ck用のソースファイル以外は何もしない
	if (!(/\.bf$/i).test(file)) return through();

	return through(transform, flush);

	var buf = '';
	function transform(row) {
		buf += row;
	}
	function flush() {
		this.queue(compile(buf));
		this.queue(null);
	}
}

function compile(source) {
	// original) https://gist.github.com/youz/45041
	var prompt=function(x,y){return'a'};

	return (function(bf){j=s=[];o=p='';b=[m=0];bf=bf.split('');
		for(i in bf)(c=bf[i])=='['?s.push(i):c==']'?j[j[i]=s.pop()]=i:0;
		for(i=0;c=bf[i],i<bf.length;++i)
		c=='>'?b[++m]=b[m]||0:
		c=='<'?--m:c=='+'?++b[m]:
		c=='-'?--b[m]:c=='['?b[m]||(i=j[i]):
		c==']'?b[m]&&(i=j[i]):
		c==','?(b[m]=((p=prompt('>',''))&&p.length)?p.charCodeAt(0):0):
		c=='.'?o+=String.fromCharCode(b[m]):0;
		return o;
	})(source);
}
